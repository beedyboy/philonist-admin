{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\workspace\\\\React\\\\philonist-admin\\\\pages\\\\_app.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { Provider } from 'mobx-react';\nimport App, { Container } from 'next/app';\nimport 'semantic-ui-css/semantic.min.css';\nimport { getStores, StoreProvider } from '../store/store'; // import { initializeStoreInstance } from 'mobx/lib/internal';\n\nclass CustomApp extends App {\n  static async getInitialProps(appContext) {\n    const mobxStores = getStores(); //make stores available to all pages\n\n    appContext.ctx.mobxStore = mobxStores; //call super to run pages\n\n    const appProps = await App.getInitialProps(appContext); //gather serialization friendly data from store\n\n    const initialData = {\n      courseStoreInitialData: mobxStores.courseStore.__data()\n    };\n    return _objectSpread({}, appProps, {\n      initialData // initialMobxState: mobxStore,\n\n    });\n  } // constructor(props) {\n  //     super(props);\n  //     const isServer = typeof window === 'undefined';\n  //     this.mobxStores = isServer ? props.initialMobxState : getStores(props.initialMobxState);\n  // }\n\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      initialData\n    } = this.props;\n    const stores = getStores(initialData);\n    return __jsx(StoreProvider, {\n      value: stores,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 14\n      }\n    }, __jsx(Component, _extends({}, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default CustomApp;","map":{"version":3,"sources":["C:/Users/hp/Desktop/workspace/React/philonist-admin/pages/_app.js"],"names":["React","Provider","App","Container","getStores","StoreProvider","CustomApp","getInitialProps","appContext","mobxStores","ctx","mobxStore","appProps","initialData","courseStoreInitialData","courseStore","__data","render","Component","pageProps","props","stores"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAOC,GAAP,IAAcC,SAAd,QAA+B,UAA/B;AACA,OAAO,kCAAP;AACA,SAASC,SAAT,EAAoBC,aAApB,QAAyC,gBAAzC,C,CACA;;AAEA,MAAMC,SAAN,SAAwBJ,GAAxB,CAA4B;AACxB,eAAaK,eAAb,CAA6BC,UAA7B,EAAyC;AACrC,UAAMC,UAAU,GAAGL,SAAS,EAA5B,CADqC,CAGrC;;AACAI,IAAAA,UAAU,CAACE,GAAX,CAAeC,SAAf,GAA2BF,UAA3B,CAJqC,CAKrC;;AACA,UAAMG,QAAQ,GAAG,MAAMV,GAAG,CAACK,eAAJ,CAAoBC,UAApB,CAAvB,CANqC,CAOrC;;AACA,UAAMK,WAAW,GAAG;AAChBC,MAAAA,sBAAsB,EAAEL,UAAU,CAACM,WAAX,CAAuBC,MAAvB;AADR,KAApB;AAGA,6BACOJ,QADP;AAEIC,MAAAA,WAFJ,CAGI;;AAHJ;AAKH,GAjBuB,CAkBxB;AACA;AACA;AACA;AACA;;;AACAI,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA,SAAb;AAAwBN,MAAAA;AAAxB,QAAwC,KAAKO,KAAnD;AACA,UAAMC,MAAM,GAAGjB,SAAS,CAACS,WAAD,CAAxB;AACA,WACK,MAAC,aAAD;AAAe,MAAA,KAAK,EAAEQ,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEO,MAAC,SAAD,eAAeF,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFP,CADL;AAOH;;AAjCuB;;AAmC5B,eAAeb,SAAf","sourcesContent":["import React from 'react';\r\nimport { Provider } from 'mobx-react';\r\nimport App, { Container } from 'next/app';\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport { getStores, StoreProvider } from '../store/store';\r\n// import { initializeStoreInstance } from 'mobx/lib/internal';\r\n\r\nclass CustomApp extends App {\r\n    static async getInitialProps(appContext) {\r\n        const mobxStores = getStores();\r\n\r\n        //make stores available to all pages\r\n        appContext.ctx.mobxStore = mobxStores;\r\n        //call super to run pages\r\n        const appProps = await App.getInitialProps(appContext);\r\n        //gather serialization friendly data from store\r\n        const initialData = {\r\n            courseStoreInitialData: mobxStores.courseStore.__data()\r\n        }\r\n        return {\r\n            ...appProps,\r\n            initialData\r\n            // initialMobxState: mobxStore,\r\n        };\r\n    }\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     const isServer = typeof window === 'undefined';\r\n    //     this.mobxStores = isServer ? props.initialMobxState : getStores(props.initialMobxState);\r\n    // }\r\n    render() {\r\n        const { Component, pageProps, initialData } = this.props;\r\n        const stores = getStores(initialData);\r\n        return (\r\n             <StoreProvider value={stores}>\r\n                 \r\n                    <Component {...pageProps} />\r\n                  \r\n             </StoreProvider>\r\n        )\r\n    }\r\n}\r\nexport default CustomApp;"]},"metadata":{},"sourceType":"module"}