{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\workspace\\\\React\\\\philonist-admin\\\\store\\\\store.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// import { useStaticRendering } from 'mobx-react';\nimport { useLocalStore, useObserver } from 'mobx-react';\nimport CourseStore from './courseStore';\nvar isServer = false; // useStaticRendering(isServer);\n\nvar store;\nexport function getStores() {\n  var initialData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    courseStore: {}\n  };\n\n  if (isServer) {\n    return {\n      courseStore: new CourseStore(initialData.courseStore)\n    };\n  }\n\n  if (!store) {\n    store = {\n      courseStore: new CourseStore(initialData.courseStore)\n    };\n  }\n\n  return store;\n} // const StoreContext = React.createContext();\n// export function StoreProvider(props) {\n//     return <StoreContext.Provider value={props.value}>\n//         {props.children}\n//     </StoreContext.Provider>\n// }\n\nvar StoreContext = React.createContext();\nexport function StoreProvider(props) {\n  var store = useLocalStore(function () {\n    return {\n      bugs: ['centipede'],\n      addBug: function addBug(bug) {\n        store.bugs.push(bug);\n      },\n\n      get bugsCount() {\n        return store.bugs.length;\n      }\n\n    };\n  });\n  return __jsx(StoreContext.Provider, {\n    value: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, props.children);\n}\n;\nexport function useMobxStores() {\n  return React.useContext(StoreContext);\n}","map":{"version":3,"sources":["C:/Users/hp/Desktop/workspace/React/philonist-admin/store/store.js"],"names":["useLocalStore","useObserver","CourseStore","isServer","store","getStores","initialData","courseStore","StoreContext","React","createContext","StoreProvider","props","bugs","addBug","bug","push","bugsCount","length","children","useMobxStores","useContext"],"mappings":";;;AAAA;AACA,SAAQA,aAAR,EAAuBC,WAAvB,QAAyC,YAAzC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,IAAMC,QAAQ,QAAd,C,CACA;;AAEA,IAAIC,KAAJ;AAEA,OAAQ,SAASC,SAAT,GAAsD;AAAA,MAAnCC,WAAmC,uEAArB;AAAEC,IAAAA,WAAW,EAAE;AAAf,GAAqB;;AAE1D,MAAGJ,QAAH,EAAa;AACT,WAAO;AACHI,MAAAA,WAAW,EAAE,IAAIL,WAAJ,CAAgBI,WAAW,CAACC,WAA5B;AADV,KAAP;AAGH;;AACD,MAAG,CAACH,KAAJ,EAAW;AACPA,IAAAA,KAAK,GAAG;AACJG,MAAAA,WAAW,EAAE,IAAIL,WAAJ,CAAgBI,WAAW,CAACC,WAA5B;AADT,KAAR;AAGH;;AACD,SAAOH,KAAP;AACH,C,CAED;AAEA;AACA;AACA;AACA;AACA;;AAIA,IAAMI,YAAY,GAAGC,KAAK,CAACC,aAAN,EAArB;AAEA,OAAO,SAASC,aAAT,CAAuBC,KAAvB,EAA+B;AAEtC,MAAMR,KAAK,GAAGJ,aAAa,CAAC;AAAA,WAAO;AAC/Ba,MAAAA,IAAI,EAAE,CAAC,WAAD,CADyB;AAE/BC,MAAAA,MAAM,EAAE,gBAACC,GAAD,EAAS;AACbX,QAAAA,KAAK,CAACS,IAAN,CAAWG,IAAX,CAAgBD,GAAhB;AACH,OAJ8B;;AAK/B,UAAIE,SAAJ,GAAgB;AACZ,eAAOb,KAAK,CAACS,IAAN,CAAWK,MAAlB;AACH;;AAP8B,KAAP;AAAA,GAAD,CAA3B;AAUA,SACI,MAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEd,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCQ,KAAK,CAACO,QAA5C,CADJ;AAGC;AAAA;AAED,OAAO,SAASC,aAAT,GAAyB;AAC5B,SAAOX,KAAK,CAACY,UAAN,CAAiBb,YAAjB,CAAP;AACH","sourcesContent":["// import { useStaticRendering } from 'mobx-react';\r\nimport {useLocalStore, useObserver} from 'mobx-react';\r\nimport CourseStore from './courseStore';\r\n\r\nconst isServer = typeof window === 'undefined';\r\n// useStaticRendering(isServer);\r\n\r\nlet store;\r\n\r\nexport  function getStores(initialData = { courseStore: {} }) {\r\n\r\n    if(isServer) {\r\n        return {\r\n            courseStore: new CourseStore(initialData.courseStore)\r\n        };\r\n    }\r\n    if(!store) {\r\n        store = {\r\n            courseStore: new CourseStore(initialData.courseStore),\r\n        };\r\n    }\r\n    return store;\r\n}\r\n\r\n// const StoreContext = React.createContext();\r\n\r\n// export function StoreProvider(props) {\r\n//     return <StoreContext.Provider value={props.value}>\r\n//         {props.children}\r\n//     </StoreContext.Provider>\r\n// }\r\n\r\n\r\n\r\nconst StoreContext = React.createContext();\r\n\r\nexport function StoreProvider(props)  {\r\n    \r\nconst store = useLocalStore(() => ({\r\n    bugs: ['centipede'],\r\n    addBug: (bug) => {\r\n        store.bugs.push(bug);\r\n    },\r\n    get bugsCount() {\r\n        return store.bugs.length\r\n    }\r\n}));\r\n\r\nreturn (\r\n    <StoreContext.Provider value={store}>{props.children}</StoreContext.Provider>\r\n)\r\n};\r\n\r\nexport function useMobxStores() {\r\n    return React.useContext(StoreContext);\r\n}"]},"metadata":{},"sourceType":"module"}