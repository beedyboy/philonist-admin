{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.b05fd4f09f180b38a235.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["import React from 'react';\r\nimport { Provider } from 'mobx-react';\r\nimport App, { Container } from 'next/app';\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport { getStores, StoreProvider } from '../store/store';\r\n// import { initializeStoreInstance } from 'mobx/lib/internal';\r\n\r\nclass CustomApp extends App {\r\n    static async getInitialProps(appContext) {\r\n        const mobxStores = getStores();\r\n\r\n        //make stores available to all pages\r\n        appContext.ctx.mobxStore = mobxStores;\r\n        //call super to run pages\r\n        const appProps = await App.getInitialProps(appContext);\r\n        //gather serialization friendly data from store\r\n        const initialData = {\r\n            courseStoreInitialData: mobxStores.courseStore.__data()\r\n        }\r\n        return {\r\n            ...appProps,\r\n            initialData\r\n            // initialMobxState: mobxStore,\r\n        };\r\n    }\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     const isServer = typeof window === 'undefined';\r\n    //     this.mobxStores = isServer ? props.initialMobxState : getStores(props.initialMobxState);\r\n    // }\r\n    render() {\r\n        const { Component, pageProps, initialData } = this.props;\r\n        const stores = getStores(initialData);\r\n        return (\r\n             <StoreProvider value={stores}>\r\n                 \r\n                    <Component {...pageProps} />\r\n                  \r\n             </StoreProvider>\r\n        )\r\n    }\r\n}\r\nexport default CustomApp;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;AAkBA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;AAhCA;;;;;;AACA;AACA;AAEA;AACA;;AACA;AACA;;AADA;AACA;AACA;AACA;AADA;AAIA;AACA;AACA;;;;;;;;;;;;;AAfA;AACA;AAkCA;;;;A","sourceRoot":""}