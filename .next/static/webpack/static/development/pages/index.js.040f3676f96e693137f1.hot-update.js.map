{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.040f3676f96e693137f1.hot-update.js","sources":["webpack:///./store/store.js"],"sourcesContent":["// import { useStaticRendering } from 'mobx-react';\r\nimport {useLocalStore, useObserver} from 'mobx-react';\r\nimport CourseStore from './courseStore';\r\n\r\nconst isServer = typeof window === 'undefined';\r\n// useStaticRendering(isServer);\r\n\r\nlet store;\r\n\r\nexport  function getStores(initialData = { courseStore: {} }) {\r\n\r\n    if(isServer) {\r\n        return {\r\n            courseStore: new CourseStore(initialData.courseStore)\r\n        };\r\n    }\r\n    if(!store) {\r\n        store = {\r\n            courseStore: new CourseStore(initialData.courseStore),\r\n        };\r\n    }\r\n    return store;\r\n}\r\n\r\n// const StoreContext = React.createContext();\r\n\r\n// export function StoreProvider(props) {\r\n//     return <StoreContext.Provider value={props.value}>\r\n//         {props.children}\r\n//     </StoreContext.Provider>\r\n// }\r\n\r\n\r\n\r\nconst StoreContext = React.createContext();\r\n\r\nexport function StoreProvider(props)  {\r\n    \r\nconst store = useLocalStore(() => ({\r\n    bugs: ['centipede'],\r\n    addBug: (bug) => {\r\n        store.bugs.push(bug);\r\n    },\r\n    get bugsCount() {\r\n        return store.bugs.length\r\n    }\r\n}));\r\n\r\nreturn (\r\n    <StoreContext.Provider value={store}>{props.children}</StoreContext.Provider>\r\n)\r\n};\r\n\r\nexport function useMobxStores() {\r\n    return React.useContext(StoreContext);\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AARA;AAAA;AAUA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;;;;A","sourceRoot":""}