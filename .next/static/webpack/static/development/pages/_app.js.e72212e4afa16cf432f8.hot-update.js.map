{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.e72212e4afa16cf432f8.hot-update.js","sources":["webpack:///./pages/_app.js","webpack:///./store/courseStore.js"],"sourcesContent":["import React from 'react';\r\nimport { Provider } from 'mobx-react';\r\nimport App, { Container } from 'next/app';\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport { getStores, StoreProvider } from '../store/store';\r\n// import { initializeStoreInstance } from 'mobx/lib/internal';\r\n\r\nclass CustomApp extends App {\r\n    static async getInitialProps(appContext) {\r\n        const mobxStores = getStores();\r\n\r\n        //make stores available to all pages\r\n        appContext.ctx.mobxStore = mobxStores;\r\n        //call super to run pages\r\n        const appProps = await App.getInitialProps(appContext);\r\n        //gather serialization friendly data from store\r\n        const initialData = {\r\n            courseStoreInitialData: mobxStores.courseStore._data()\r\n        }\r\n        return {\r\n            ...appProps,\r\n            initialData\r\n            // initialMobxState: mobxStore,\r\n        };\r\n    }\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     const isServer = typeof window === 'undefined';\r\n    //     this.mobxStores = isServer ? props.initialMobxState : getStores(props.initialMobxState);\r\n    // }\r\n    render() {\r\n        const { Component, pageProps, initialData } = this.props;\r\n        const stores = getStores(initialData);\r\n        return (\r\n             <StoreProvider value={stores}>\r\n                 \r\n                    <Component {...pageProps} />\r\n                  \r\n             </StoreProvider>\r\n        )\r\n    }\r\n}\r\nexport default CustomApp;","import { observable, action, decorate } from 'mobx';\r\n\r\nclass CourseStore {\r\n  @observable   modules = null;\r\n   @observable  courses = null;\r\n   @observable likesCount = 32;\r\n\r\n     constructor(initialData = {}){\r\n        this.courses = initialData.courses;\r\n        this.modules = initialData.modules;\r\n        this.likesCount = initialData.likesCount;\r\n        console.log('likes', this.likesCount);\r\n     }\r\n\r\n     @action setCount() {\r\n       this.likesCount +=1;\r\n     }\r\n     _data() {\r\n       return {\r\n        courses: this.courses,\r\n        modules: this.modules,\r\n        likesCount: this.likesCount\r\n       }\r\n     }\r\n\r\n}\r\n\r\n// decorate(CourseStore, {\r\n//     modules: observable,\r\n//     courses: observable\r\n// })\r\n// const courseStore = new CourseStore()\r\nexport default CourseStore;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;AAkBA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;AAhCA;;;;;;AACA;AACA;AAEA;AACA;;AACA;AACA;;AADA;AACA;AACA;AACA;AADA;AAIA;AACA;AACA;;;;;;;;;;;;;AAfA;AACA;AAkCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1CA;AAEA;AAKA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;;;;AApBA;;;;;AAAA;;AACA;;;;;AAAA;;AACA;;;;;AAAA;;AASA;AAcA;AACA;AACA;AACA;AACA;AAAA;;;;A","sourceRoot":""}